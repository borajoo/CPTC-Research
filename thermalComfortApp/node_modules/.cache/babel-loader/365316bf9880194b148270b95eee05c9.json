{"ast":null,"code":"import _slicedToArray from\"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{getSurveys}from'../../firebaseConfig';import{useAuth}from'../../contexts/AuthContext';import'./DataWindow.css';import DataWindowNav from'../DataWindowNav/DataWindowNav';import YourSurveys from'../YourSurveys/YourSurveys';function DataWindow(props){var updateState=props.updateState;var _useAuth=useAuth(),currentUser=_useAuth.currentUser;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showData=_useState2[0],setShowData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),showYourSurveys=_useState4[0],setShowYourSurveys=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),surveys=_useState6[0],setSurveys=_useState6[1];useEffect(function(){getSurveys(currentUser.email).then(function(collection){var data=[];collection.forEach(function(doc){data.push(doc.data());});setSurveys(data);}).catch(function(error){console.error(error);});},[updateState,showData]);return/*#__PURE__*/React.createElement(\"div\",{className:\"data-container\"},/*#__PURE__*/React.createElement(DataWindowNav,{setShowData:setShowData,setShowYourSurveys:setShowYourSurveys}),showYourSurveys&&/*#__PURE__*/React.createElement(YourSurveys,{surveys:surveys}));};export default DataWindow;","map":{"version":3,"sources":["/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/DataWindow/DataWindow.tsx"],"names":["React","useState","useEffect","getSurveys","useAuth","DataWindowNav","YourSurveys","DataWindow","props","updateState","currentUser","showData","setShowData","showYourSurveys","setShowYourSurveys","surveys","setSurveys","email","then","collection","data","forEach","doc","push","catch","error","console"],"mappings":"qMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,sBAA3B,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA+B,IACrBC,CAAAA,WADqB,CACLD,KADK,CACrBC,WADqB,cAELL,OAAO,EAFF,CAErBM,WAFqB,UAErBA,WAFqB,eAIGT,QAAQ,CAAC,KAAD,CAJX,wCAItBU,QAJsB,eAIZC,WAJY,8BAKiBX,QAAQ,CAAC,IAAD,CALzB,yCAKtBY,eALsB,eAKLC,kBALK,8BAMCb,QAAQ,CAAoC,EAApC,CANT,yCAMtBc,OANsB,eAMbC,UANa,eAQ7Bd,SAAS,CAAC,UAAM,CACdC,UAAU,CAACO,WAAW,CAACO,KAAb,CAAV,CAA8BC,IAA9B,CAAmC,SAACC,UAAD,CAAgB,CACjD,GAAMC,CAAAA,IAAsC,CAAG,EAA/C,CACAD,UAAU,CAACE,OAAX,CAAmB,SAAAC,GAAG,CAAI,CACxBF,IAAI,CAACG,IAAL,CAAUD,GAAG,CAACF,IAAJ,EAAV,EACD,CAFD,EAGAJ,UAAU,CAACI,IAAD,CAAV,CACD,CAND,EAMGI,KANH,CAMS,SAACC,KAAD,CAAW,CAClBC,OAAO,CAACD,KAAR,CAAcA,KAAd,EACD,CARD,EASD,CAVQ,CAUN,CAAChB,WAAD,CAAcE,QAAd,CAVM,CAAT,CAYA,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACI,oBAAC,aAAD,EAAe,WAAW,CAAEC,WAA5B,CAAyC,kBAAkB,CAAEE,kBAA7D,EADJ,CAEKD,eAAe,eAAI,oBAAC,WAAD,EAAa,OAAO,CAAEE,OAAtB,EAFxB,CADF,CAUD,EAED,cAAeR,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getSurveys } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext'\nimport './DataWindow.css';\nimport DataWindowNav from '../DataWindowNav/DataWindowNav'\nimport YourSurveys from '../YourSurveys/YourSurveys'\n\nfunction DataWindow(props:any) {\n  const { updateState } = props;\n  const { currentUser } = useAuth();\n\n  const [showData, setShowData] = useState(false);\n  const [showYourSurveys, setShowYourSurveys] = useState(true);\n  const [surveys, setSurveys] = useState<firebase.firestore.DocumentData[]>([]);\n\n  useEffect(() => {\n    getSurveys(currentUser.email).then((collection) => {\n      const data:firebase.firestore.DocumentData[] = [];\n      collection.forEach(doc => {\n        data.push(doc.data())\n      })\n      setSurveys(data);\n    }).catch((error) => {\n      console.error(error);\n    });\n  }, [updateState, showData])\n\n  return (\n    <div className=\"data-container\">\n        <DataWindowNav setShowData={setShowData} setShowYourSurveys={setShowYourSurveys}/>\n        {showYourSurveys && <YourSurveys surveys={surveys}/>}\n        {/* {showData && <EditNotifications toggleState={() => {\n            setShowEditNotifications(false);\n            setShowMenuHome(true);\n        }}/>} */}\n    </div>\n  )\n};\n\nexport default DataWindow"]},"metadata":{},"sourceType":"module"}