{"ast":null,"code":"var _jsxFileName = \"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/YourSurveys/YourSurveys.tsx\";\nimport React from 'react';\nimport './YourSurveys.css'; // import YourSurveys from '../DataWindowNav/DataWindowNav'\n\nimport { getSurveys } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext';\n\nfunction YourSurveys(props) {\n  const {\n    currentUser\n  } = useAuth();\n  const surveys = [];\n  React.useEffect(() => {\n    //populate with current notification data if any\n    getSurveys(currentUser.email).then(collection => {\n      collection.forEach(doc => {\n        const surveyData = doc.data();\n        surveys.push({\n          airCirculationSensation: surveyData.airCirculationSensation,\n          buildingNumber: surveyData.buildingNumber,\n          clothing: surveyData.clothing,\n          humidity: surveyData.humidity,\n          humiditySensation: surveyData.humiditySensation,\n          recentAction: surveyData.recentAction,\n          roomNumber: surveyData.roomNumber,\n          temperature: surveyData.temperature,\n          thermalSensation: surveyData.thermalSensation,\n          timeStamp: surveyData.timeStamp,\n          windSpeed: surveyData.windSpeed\n        });\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }); //removed dependency array?\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"surveys-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"surveys\");\n}\n\n;\nexport default YourSurveys;","map":{"version":3,"sources":["/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/YourSurveys/YourSurveys.tsx"],"names":["React","getSurveys","useAuth","YourSurveys","props","currentUser","surveys","useEffect","email","then","collection","forEach","doc","surveyData","data","push","airCirculationSensation","buildingNumber","clothing","humidity","humiditySensation","recentAction","roomNumber","temperature","thermalSensation","timeStamp","windSpeed","catch","error","console"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAO,mBAAP,C,CACA;;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAAgC;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAkBH,OAAO,EAA/B;AACA,QAAMI,OAAO,GAAG,EAAhB;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAAE;AACtBN,IAAAA,UAAU,CAACI,WAAW,CAACG,KAAb,CAAV,CAA8BC,IAA9B,CAAoCC,UAAD,IAAgB;AACjDA,MAAAA,UAAU,CAACC,OAAX,CAAmBC,GAAG,IAAI;AACxB,cAAMC,UAAU,GAAGD,GAAG,CAACE,IAAJ,EAAnB;AACAR,QAAAA,OAAO,CAACS,IAAR,CACE;AACEC,UAAAA,uBAAuB,EAAEH,UAAU,CAACG,uBADtC;AAEEC,UAAAA,cAAc,EAAEJ,UAAU,CAACI,cAF7B;AAGEC,UAAAA,QAAQ,EAAEL,UAAU,CAACK,QAHvB;AAIEC,UAAAA,QAAQ,EAAEN,UAAU,CAACM,QAJvB;AAKEC,UAAAA,iBAAiB,EAAEP,UAAU,CAACO,iBALhC;AAMEC,UAAAA,YAAY,EAAER,UAAU,CAACQ,YAN3B;AAOEC,UAAAA,UAAU,EAAET,UAAU,CAACS,UAPzB;AAQEC,UAAAA,WAAW,EAAEV,UAAU,CAACU,WAR1B;AASEC,UAAAA,gBAAgB,EAAEX,UAAU,CAACW,gBAT/B;AAUEC,UAAAA,SAAS,EAAEZ,UAAU,CAACY,SAVxB;AAWEC,UAAAA,SAAS,EAAEb,UAAU,CAACa;AAXxB,SADF;AAeD,OAjBD;AAkBD,KAnBD,EAmBGC,KAnBH,CAmBUC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KArBD;AAsBH,GAvBC,EAJ4B,CA2B1B;;AAIJ,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAKD;;AAAA;AAED,eAAezB,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport './YourSurveys.css';\n// import YourSurveys from '../DataWindowNav/DataWindowNav'\nimport { getSurveys } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext'\n\nfunction YourSurveys(props:any) {\n    const { currentUser } = useAuth();\n    const surveys = [];\n\n    React.useEffect(() => { //populate with current notification data if any\n      getSurveys(currentUser.email).then((collection) => {\n        collection.forEach(doc => {\n          const surveyData = doc.data();\n          surveys.push(\n            {\n              airCirculationSensation: surveyData.airCirculationSensation,\n              buildingNumber: surveyData.buildingNumber,\n              clothing: surveyData.clothing,\n              humidity: surveyData.humidity,\n              humiditySensation: surveyData.humiditySensation,\n              recentAction: surveyData.recentAction,\n              roomNumber: surveyData.roomNumber,\n              temperature: surveyData.temperature,\n              thermalSensation: surveyData.thermalSensation,\n              timeStamp: surveyData.timeStamp,\n              windSpeed: surveyData.windSpeed\n            }\n          )\n        })\n      }).catch((error) => {\n        console.error(error);\n      });\n  }); //removed dependency array?\n\n    \n\n  return (\n    <div className=\"surveys-container\">\n        surveys\n    </div>\n  )\n};\n\nexport default YourSurveys"]},"metadata":{},"sourceType":"module"}