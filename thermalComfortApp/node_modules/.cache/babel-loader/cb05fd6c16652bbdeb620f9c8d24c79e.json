{"ast":null,"code":"var _jsxFileName = \"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/Survey/Survey.tsx\";\nimport React from 'react';\nimport './Survey.css';\nimport BaseButton from '../BaseButton/BaseButton';\nimport BaseInputField from '../BaseInputField/BaseInputField';\nimport BaseSelectOne from '../BaseSelectOne/BaseSelectOne';\nimport BaseSelectMultiple from '../BaseSelectMultiple/BaseSelectMultiple';\nimport SecondaryButton from \"../../components/SecondaryButton/SecondaryButton\";\nimport { pushData } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { toast } from '../../toast';\n\nfunction Survey(props) {\n  const {\n    toggleState\n  } = props;\n  const {\n    currentUser\n  } = useAuth();\n  let canSubmit = true;\n  let surveyData = {};\n\n  function postData() {\n    if (currentUser) {\n      buildingNumber != '' ? surveyData.buildingNumber = buildingNumber : canSubmit = false;\n      roomNumber != '' ? surveyData.roomNumber = roomNumber : canSubmit = false;\n      tempInRoom != '' ? surveyData.thermalSensation = tempInRoom : canSubmit = false;\n      preferFeel != '' ? surveyData.thermalPreference = preferFeel : canSubmit = false;\n      airCirculation != '' ? surveyData.airCirculationSensation = airCirculation : canSubmit = false;\n      humid != '' ? surveyData.humiditySensation = humid : canSubmit = false;\n      clothing != '' ? surveyData.clothing = clothing : canSubmit = false;\n      activities != [] ? surveyData.recentAction = activities : canSubmit = false;\n      survey;\n\n      if (canSubmit) {\n        try {\n          pushData(surveyData, currentUser.email);\n          toast(`Thank you! Survey submitted successfully.`);\n        } catch (error) {\n          toast(`Error submitting survey: ${error}`);\n        }\n\n        toggleState();\n      } else {\n        toast('Please answer all of the questions before submitting.');\n      }\n    }\n  }\n\n  const [buildingNumber, setBuildingNumber] = React.useState('');\n  const [roomNumber, setRoomNumber] = React.useState('');\n  const tempInRoomList = [{\n    id: 1,\n    val: 'Cold'\n  }, {\n    id: 2,\n    val: 'Cool'\n  }, {\n    id: 3,\n    val: 'Slightly Cool'\n  }, {\n    id: 4,\n    val: 'Neutral: Neither Cool or Warm'\n  }, {\n    id: 5,\n    val: 'Slightly Warm'\n  }, {\n    id: 6,\n    val: 'Warm'\n  }, {\n    id: 7,\n    val: 'Hot'\n  }];\n  const [tempInRoom, setTempInRoom] = React.useState('');\n  const preferFeelList = [{\n    id: 1,\n    val: 'Cooler'\n  }, {\n    id: 2,\n    val: 'No Change'\n  }, {\n    id: 3,\n    val: 'Warmer'\n  }];\n  const [preferFeel, setPreferFeel] = React.useState('');\n  const airCirculationList = [{\n    id: 1,\n    val: 'Cooler'\n  }, {\n    id: 2,\n    val: 'No Change'\n  }, {\n    id: 3,\n    val: 'Warmer'\n  }];\n  const [airCirculation, setAirCirculation] = React.useState('');\n  const humidList = [{\n    id: 1,\n    val: 'Too Dry'\n  }, {\n    id: 2,\n    val: 'Slightly Dry'\n  }, {\n    id: 3,\n    val: 'Just Right'\n  }, {\n    id: 4,\n    val: 'Slightly Humid'\n  }, {\n    id: 5,\n    val: 'Too Humid'\n  }];\n  const [humid, setHumid] = React.useState('');\n  const clothingList = [{\n    id: 1,\n    val: 'Minimal [shorts, shirt]'\n  }, {\n    id: 2,\n    val: 'Average [pants, shirt]'\n  }, {\n    id: 3,\n    val: 'Heavy [pants, jacket/sweater/sweatshirt]'\n  }];\n  const [clothing, setClothing] = React.useState('');\n  const activitiesList = [{\n    id: 1,\n    val: 'Sitting'\n  }, {\n    id: 2,\n    val: 'Standing'\n  }, {\n    id: 3,\n    val: 'Walking'\n  }, {\n    id: 4,\n    val: 'Jogging/Fast Walking'\n  }, {\n    id: 5,\n    val: 'Running'\n  }, {\n    id: 6,\n    val: 'Other'\n  }];\n  const [activities, setActivities] = React.useState([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"survey-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SecondaryButton, {\n    onClick: toggleState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Survey\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"baseinput-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseInputField, {\n    label: 'What building are you in?',\n    iduser: 'building',\n    width: '300px',\n    value: buildingNumber,\n    onChange: e => setBuildingNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"baseinput-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseInputField, {\n    label: 'What room are you in?',\n    iduser: 'room',\n    width: '300px',\n    value: roomNumber,\n    onChange: e => setRoomNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"How does the temperature feel in the room?\"), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    optionsList: tempInRoomList,\n    value: tempInRoom,\n    onChange: e => setTempInRoom(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"How would you prefer for it to feel?\"), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    optionsList: preferFeelList,\n    value: preferFeel,\n    onChange: e => setPreferFeel(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, \"How do you feel about the air circulation in the room?\"), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    optionsList: airCirculationList,\n    value: airCirculation,\n    onChange: e => setAirCirculation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"How humid does the room feel?\"), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    optionsList: humidList,\n    value: humid,\n    onChange: e => setHumid(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, \"What clothing layers are you wearing?\"), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    optionsList: clothingList,\n    value: clothing,\n    onChange: e => setClothing(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"What activities have you done in the past 10-20 minutes?\"), /*#__PURE__*/React.createElement(BaseSelectMultiple, {\n    optionsList: activitiesList,\n    value: activities,\n    onChange: e => setActivities(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"survey-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseButton, {\n    width: '300px',\n    onClick: postData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\n;\nexport default Survey; //     function getWeatherData(e:any){\n//         let apiKey = 'a28b0237f94d95bbd08c26352f7c7bdb';\n//         let city = e.detail.value;\n//         let url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`\n//         request(url, function (err:any, response:any, body:any) {\n//             if(err){\n//                 return;\n//             } \n//             else {\n//                 if(body.cod !== \"404\\\") {\n//                     let weatherData = JSON.parse(body);\n//                     if (weatherData.main) {\n//                         surveyData.temp = weatherData.main.temp;\n//                         surveyData.windspeed = weatherData.wind.speed;\n//                         surveyData.humidity = weatherData.main.humidity;\n//                     }\n//                 }\n//             }\n//         });\n//     }\n// }","map":{"version":3,"sources":["/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/Survey/Survey.tsx"],"names":["React","BaseButton","BaseInputField","BaseSelectOne","BaseSelectMultiple","SecondaryButton","pushData","useAuth","toast","Survey","props","toggleState","currentUser","canSubmit","surveyData","postData","buildingNumber","roomNumber","tempInRoom","thermalSensation","preferFeel","thermalPreference","airCirculation","airCirculationSensation","humid","humiditySensation","clothing","activities","recentAction","survey","email","error","setBuildingNumber","useState","setRoomNumber","tempInRoomList","id","val","setTempInRoom","preferFeelList","setPreferFeel","airCirculationList","setAirCirculation","humidList","setHumid","clothingList","setClothing","activitiesList","setActivities","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Survey.css';\nimport BaseButton from '../BaseButton/BaseButton'\nimport BaseInputField from '../BaseInputField/BaseInputField';\nimport BaseSelectOne from '../BaseSelectOne/BaseSelectOne';\nimport BaseSelectMultiple from '../BaseSelectMultiple/BaseSelectMultiple';\nimport SecondaryButton from \"../../components/SecondaryButton/SecondaryButton\";\nimport { pushData } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext'\nimport { toast } from '../../toast'\n\n\nfunction Survey(props: any) {\n  const { toggleState } = props;\n  const { currentUser } = useAuth();\n  let canSubmit = true;\n  let surveyData: any = {};\n\n  function postData() {\n    if (currentUser) {\n      buildingNumber != '' ? surveyData.buildingNumber = buildingNumber : canSubmit = false;\n      roomNumber != '' ? surveyData.roomNumber = roomNumber : canSubmit = false;\n      tempInRoom != '' ? surveyData.thermalSensation = tempInRoom : canSubmit = false;\n      preferFeel != '' ? surveyData.thermalPreference = preferFeel : canSubmit = false;\n      airCirculation != '' ? surveyData.airCirculationSensation = airCirculation : canSubmit = false;\n      humid != '' ? surveyData.humiditySensation = humid : canSubmit = false;\n      clothing != '' ? surveyData.clothing = clothing : canSubmit = false;\n      activities != [] ? surveyData.recentAction = activities : canSubmit = false;\n      survey\n      if(canSubmit){\n        try {\n          pushData(surveyData, currentUser.email);\n          toast(`Thank you! Survey submitted successfully.`);\n        }\n        catch(error) {\n          toast(`Error submitting survey: ${error}`);\n        }\n        toggleState();\n      }\n      else {\n        toast('Please answer all of the questions before submitting.');\n      }\n    }\n  }\n\n  const [buildingNumber, setBuildingNumber] = React.useState('');\n  const [roomNumber, setRoomNumber] = React.useState('');\n\n  const tempInRoomList = [\n    {id: 1, val: 'Cold'},\n    {id: 2, val: 'Cool'},\n    {id: 3, val: 'Slightly Cool'},\n    {id: 4, val: 'Neutral: Neither Cool or Warm'},\n    {id: 5, val: 'Slightly Warm'},\n    {id: 6, val: 'Warm'},\n    {id: 7, val: 'Hot'},\n  ]\n  const [tempInRoom, setTempInRoom] = React.useState('');\n\n  const preferFeelList = [\n    {id: 1, val: 'Cooler'},\n    {id: 2, val: 'No Change'},\n    {id: 3, val: 'Warmer'},\n  ]\n  const [preferFeel, setPreferFeel] = React.useState('');\n\n  const airCirculationList = [\n    {id: 1, val: 'Cooler'},\n    {id: 2, val: 'No Change'},\n    {id: 3, val: 'Warmer'},\n  ]\n  const [airCirculation, setAirCirculation] = React.useState('');\n\n  const humidList = [\n    {id: 1, val: 'Too Dry'},\n    {id: 2, val: 'Slightly Dry'},\n    {id: 3, val: 'Just Right'},\n    {id: 4, val: 'Slightly Humid'},\n    {id: 5, val: 'Too Humid'},\n  ]\n  const [humid, setHumid] = React.useState('');\n\n  const clothingList = [\n    {id: 1, val: 'Minimal [shorts, shirt]'},\n    {id: 2, val: 'Average [pants, shirt]'},\n    {id: 3, val: 'Heavy [pants, jacket/sweater/sweatshirt]'},\n  ]\n  const [clothing, setClothing] = React.useState('');\n\n  const activitiesList = [\n    {id: 1, val: 'Sitting'},\n    {id: 2, val: 'Standing'},\n    {id: 3, val: 'Walking'},\n    {id: 4, val: 'Jogging/Fast Walking'},\n    {id: 5, val: 'Running'},\n    {id: 6, val: 'Other'},\n  ]\n  const [activities, setActivities] = React.useState([]);\n\n  return (\n    <div className=\"survey-container\">\n      <div className=\"top-buttons\">\n            <SecondaryButton onClick={toggleState}>Back</SecondaryButton>\n        </div>\n      <h1>Survey</h1>\n      <div className=\"baseinput-div\">\n        <BaseInputField\n          label={'What building are you in?'}\n          iduser={'building'}\n          width={'300px'}\n          value={buildingNumber}\n          onChange={(e: any) => setBuildingNumber(e.target.value)}\n        />\n      </div>\n      <div className=\"baseinput-div\">\n        <BaseInputField\n          label={'What room are you in?'}\n          iduser={'room'}\n          width={'300px'}\n          value={roomNumber}\n          onChange={(e: any) => setRoomNumber(e.target.value)}\n        />\n      </div>\n      <p>How does the temperature feel in the room?</p>\n      <BaseSelectOne\n        optionsList={tempInRoomList}\n        value={tempInRoom}\n        onChange={(e: any) => setTempInRoom(e.target.value)}\n      />\n      <p>How would you prefer for it to feel?</p>\n      <BaseSelectOne\n        optionsList={preferFeelList}\n        value={preferFeel}\n        onChange={(e: any) => setPreferFeel(e.target.value)}\n      />\n      <p>How do you feel about the air circulation in the room?</p>\n      <BaseSelectOne\n        optionsList={airCirculationList}\n        value={airCirculation}\n        onChange={(e: any) => setAirCirculation(e.target.value)}\n      />\n      <p>How humid does the room feel?</p>\n      <BaseSelectOne\n        optionsList={humidList}\n        value={humid}\n        onChange={(e: any) => setHumid(e.target.value)}\n      />\n      <p>What clothing layers are you wearing?</p>\n      <BaseSelectOne\n        optionsList={clothingList}\n        value={clothing}\n        onChange={(e: any) => setClothing(e.target.value)}\n      />\n      <p>What activities have you done in the past 10-20 minutes?</p>\n      <BaseSelectMultiple\n        optionsList={activitiesList}\n        value={activities}\n        onChange={(e: any) => setActivities(e.target.value)}\n      />\n      <div className='survey-submit'>\n        <BaseButton width={'300px'} onClick={postData}>Submit</BaseButton>\n      </div>\n    </div>\n  )\n};\n\nexport default Survey\n\n//     function getWeatherData(e:any){\n//         let apiKey = 'a28b0237f94d95bbd08c26352f7c7bdb';\n//         let city = e.detail.value;\n//         let url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`\n//         request(url, function (err:any, response:any, body:any) {\n//             if(err){\n//                 return;\n//             } \n//             else {\n//                 if(body.cod !== \"404\\\") {\n//                     let weatherData = JSON.parse(body);\n//                     if (weatherData.main) {\n//                         surveyData.temp = weatherData.main.temp;\n//                         surveyData.windspeed = weatherData.wind.speed;\n//                         surveyData.humidity = weatherData.main.humidity;\n//                     }\n//                 }\n//             }\n//         });\n//     }\n// }"]},"metadata":{},"sourceType":"module"}