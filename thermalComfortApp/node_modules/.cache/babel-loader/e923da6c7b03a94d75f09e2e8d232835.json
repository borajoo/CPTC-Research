{"ast":null,"code":"import _defineProperty from\"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import'./EditNotifications.css';import BaseButton from'../BaseButton/BaseButton';import SecondaryButton from\"../../components/SecondaryButton/SecondaryButton\";import BaseCheckbox from\"../../components/BaseCheckbox/BaseCheckbox\";import FormGroup from\"@material-ui/core/FormGroup\";import{pushNotifs,getNotifs}from'../../firebaseConfig';import{useAuth}from'../../contexts/AuthContext';import{toast}from'../../toast';function EditNotifications(props){var toggleState=props.toggleState,updateState=props.updateState;var _useAuth=useAuth(),currentUser=_useAuth.currentUser;var _React$useState=React.useState({eightAm:false,nineAm:false,tenAm:false,elevenAm:false,twelvePm:false,onePm:false,twoPm:false,threePm:false,fourPm:false,fivePm:false,sixPm:false,sevenPm:false,eightPm:false}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];var handleChange=function handleChange(event){setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},event.target.name,event.target.checked)));};React.useEffect(function(){//populate with current notification data if any\ngetNotifs(currentUser.email).then(function(document){if(document.exists){var notifsData=document.data();if(notifsData){var stateData={eightAm:notifsData.eightAm,nineAm:notifsData.nineAm,tenAm:notifsData.tenAm,elevenAm:notifsData.elevenAm,twelvePm:notifsData.twelvePm,onePm:notifsData.onePm,twoPm:notifsData.twoPm,threePm:notifsData.threePm,fourPm:notifsData.fourPm,fivePm:notifsData.fivePm,sixPm:notifsData.sixPm,sevenPm:notifsData.sevenPm,eightPm:notifsData.eightPm};setState(stateData);}}}).catch(function(error){console.error(error);});},[updateState]);function postNotifs(){if(currentUser){try{pushNotifs(state,currentUser.email);toast(\"Thank you! Notifications edited successfully.\");}catch(error){toast(\"Error editing notifications: \".concat(error));}toggleState();}}return/*#__PURE__*/React.createElement(\"div\",{className:\"editnotifs-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"top-buttons\"},/*#__PURE__*/React.createElement(SecondaryButton,{onClick:toggleState},\"Back\")),/*#__PURE__*/React.createElement(\"h1\",null,\"Edit Notifications\"),/*#__PURE__*/React.createElement(\"h3\",null,\"Please select times to be notified to take the survey\"),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.eightAm,onChange:handleChange,name:\"eightAm\",label:\"8:00 AM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.nineAm,onChange:handleChange,name:\"nineAm\",label:\"9:00 AM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.tenAm,onChange:handleChange,name:\"tenAm\",label:\"10:00 AM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.elevenAm,onChange:handleChange,name:\"elevenAm\",label:\"11:00 AM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.twelvePm,onChange:handleChange,name:\"twelvePm\",label:\"12:00 PM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.onePm,onChange:handleChange,name:\"onePm\",label:\"1:00 PM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.twoPm,onChange:handleChange,name:\"twoPm\",label:\"2:00 PM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.threePm,onChange:handleChange,name:\"threePm\",label:\"3:00 PM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.fourPm,onChange:handleChange,name:\"fourPm\",label:\"4:00 PM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.fivePm,onChange:handleChange,name:\"fivePm\",label:\"5:00 PM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.sixPm,onChange:handleChange,name:\"sixPm\",label:\"6:00 PM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.sevenPm,onChange:handleChange,name:\"sevenPm\",label:\"7:00 PM\"}),/*#__PURE__*/React.createElement(BaseCheckbox,{checked:state.eightPm,onChange:handleChange,name:\"eightPm\",label:\"8:00 PM\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"editprofile-submit\"},/*#__PURE__*/React.createElement(BaseButton,{width:'300px',onClick:postNotifs},\"Submit\")));};export default EditNotifications;","map":{"version":3,"sources":["/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/EditNotifications/EditNotifications.tsx"],"names":["React","BaseButton","SecondaryButton","BaseCheckbox","FormGroup","pushNotifs","getNotifs","useAuth","toast","EditNotifications","props","toggleState","updateState","currentUser","useState","eightAm","nineAm","tenAm","elevenAm","twelvePm","onePm","twoPm","threePm","fourPm","fivePm","sixPm","sevenPm","eightPm","state","setState","handleChange","event","target","name","checked","useEffect","email","then","document","exists","notifsData","data","stateData","catch","error","console","postNotifs"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './EditNotifications.css';\nimport BaseButton from '../BaseButton/BaseButton'\nimport SecondaryButton from \"../../components/SecondaryButton/SecondaryButton\";\nimport BaseCheckbox from \"../../components/BaseCheckbox/BaseCheckbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { pushNotifs, getNotifs } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext'\nimport { toast } from '../../toast'\n\nfunction EditNotifications(props: any) {\n  const { toggleState, updateState } = props;\n  const { currentUser } = useAuth();\n\n  const [state, setState] = React.useState({\n    eightAm: false,\n    nineAm: false,\n    tenAm: false,\n    elevenAm: false,\n    twelvePm: false,\n    onePm: false,\n    twoPm: false,\n    threePm: false,\n    fourPm: false,\n    fivePm: false,\n    sixPm: false,\n    sevenPm: false,\n    eightPm: false\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  React.useEffect(() => { //populate with current notification data if any\n    getNotifs(currentUser.email).then((document) => {\n      if (document.exists) {\n        const notifsData = document.data();\n        if (notifsData) {\n          const stateData = {\n            eightAm: notifsData.eightAm,\n            nineAm: notifsData.nineAm,\n            tenAm: notifsData.tenAm,\n            elevenAm: notifsData.elevenAm,\n            twelvePm: notifsData.twelvePm,\n            onePm: notifsData.onePm,\n            twoPm: notifsData.twoPm,\n            threePm: notifsData.threePm,\n            fourPm: notifsData.fourPm,\n            fivePm: notifsData.fivePm,\n            sixPm: notifsData.sixPm,\n            sevenPm: notifsData.sevenPm,\n            eightPm: notifsData.eightPm\n          }\n          setState(stateData);\n        }\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n  }, [updateState]);\n\n  function postNotifs() {\n    if (currentUser) {\n      try {\n        pushNotifs(state, currentUser.email);\n        toast(`Thank you! Notifications edited successfully.`);\n      }\n      catch(error) {\n        toast(`Error editing notifications: ${error}`);\n      }\n      toggleState();\n    }\n  }\n\n  return (\n    <div className=\"editnotifs-container\">\n      <div className=\"top-buttons\">\n            <SecondaryButton onClick={toggleState}>Back</SecondaryButton>\n        </div>\n      <h1>Edit Notifications</h1>\n      <h3>Please select times to be notified to take the survey</h3>\n      <FormGroup>\n        <BaseCheckbox checked={state.eightAm} onChange={handleChange} name=\"eightAm\" label=\"8:00 AM\" />\n        <BaseCheckbox checked={state.nineAm} onChange={handleChange} name=\"nineAm\" label=\"9:00 AM\" />\n        <BaseCheckbox checked={state.tenAm} onChange={handleChange} name=\"tenAm\" label=\"10:00 AM\" />\n        <BaseCheckbox checked={state.elevenAm} onChange={handleChange} name=\"elevenAm\" label=\"11:00 AM\" />\n        <BaseCheckbox checked={state.twelvePm} onChange={handleChange} name=\"twelvePm\" label=\"12:00 PM\" />\n        <BaseCheckbox checked={state.onePm} onChange={handleChange} name=\"onePm\" label=\"1:00 PM\" />\n        <BaseCheckbox checked={state.twoPm} onChange={handleChange} name=\"twoPm\" label=\"2:00 PM\" />\n        <BaseCheckbox checked={state.threePm} onChange={handleChange} name=\"threePm\" label=\"3:00 PM\" />\n        <BaseCheckbox checked={state.fourPm} onChange={handleChange} name=\"fourPm\" label=\"4:00 PM\" />\n        <BaseCheckbox checked={state.fivePm} onChange={handleChange} name=\"fivePm\" label=\"5:00 PM\" />\n        <BaseCheckbox checked={state.sixPm} onChange={handleChange} name=\"sixPm\" label=\"6:00 PM\" />\n        <BaseCheckbox checked={state.sevenPm} onChange={handleChange} name=\"sevenPm\" label=\"7:00 PM\" />\n        <BaseCheckbox checked={state.eightPm} onChange={handleChange} name=\"eightPm\" label=\"8:00 PM\" />\n      </FormGroup>\n      <div className='editprofile-submit'>\n        <BaseButton width={'300px'} onClick={postNotifs}>Submit</BaseButton>\n      </div>\n    </div>\n  )\n};\n\nexport default EditNotifications"]},"metadata":{},"sourceType":"module"}